# * test.yml --- Test libvterm using makem.sh on GitHub Actions

# Based on Alphapapa's makem.sh
# https://github.com/alphapapa/makem.sh

# Based on Steve Purcell's examples at
# <https://github.com/purcell/setup-emacs/blob/master/.github/workflows/test.yml>,
# <https://github.com/purcell/package-lint/blob/master/.github/workflows/test.yml>.

# * License:

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# * Code:

name: "CI"
on:
  pull_request:
  push:
    # Comment out this section to enable testing of all branches.
    # branches:
    #   - master

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        emacs_version:
          - snapshot
        os:
          - ubuntu-20.04
        compile_from_elisp:
          - no
    steps:
    - uses: purcell/setup-emacs@master
      with:
        version: ${{ matrix.emacs_version }}

    - uses: actions/checkout@v2

    - name: Grab makem.sh
      uses: wei/wget@v1
      with:
        args: https://raw.githubusercontent.com/alphapapa/makem.sh/master/makem.sh

    - name: Initialize sandbox
      run: |
        SANDBOX_DIR=$(mktemp -d) || exit 1
        echo ::set-env name=SANDBOX_DIR::$SANDBOX_DIR
        bash makem.sh -vv --sandbox=$SANDBOX_DIR --install-deps --install-linters

    - name: Install spell-checker (if linting)
      if: ${{matrix.os == 'ubuntu-20.04'}}
      run: sudo apt install hunspell

    - name: Install dependencies and compile vterm
      if: ${{matrix.compile_from_elisp == 'no'}}
      run: nix-shell ci.nix --run "mkdir build && cd build && cmake .. && make && ldd ../vterm-module.so"

    - name: Compile vterm from Emacs
      if: ${{matrix.compile_from_elisp == 'yes'}}
      run: bash makem.sh -vv --sandbox=$SANDBOX batch -- --eval "(require 'vterm)"

    - name: Require vterm
      run: bash makem.sh -vv --sandbox=$SANDBOX batch -- --eval "(require 'vterm)"

    - name: Lint
      # We only need to lint once
      if: ${{ matrix.os == 'ubuntu-20.04' && matrix.emacs_version == 'snapshot'}}
      continue-on-error: true
      run: bash makem.sh -vv --sandbox=$SANDBOX_DIR --exclude makem-pre-test-conf.el lint

    # - name: Test
    #   if: always()  # Run test even if linting fails.
    #   run: bash makem.sh -vv --sandbox=$SANDBOX_DIR test

# Local Variables:
# eval: (outline-minor-mode)
# End:
